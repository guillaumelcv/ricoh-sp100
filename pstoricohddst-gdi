#!/usr/bin/env bash

# CUPS filter file
# Author: madlynx (github.com/madlynx)
# Last change: 17.01.2020 by mishta-real (github.com/mishta-real)

# Debug mode: change to 'yes' to enable
DEBUG=no

function log() {
    [[ $DEBUG = "yes" ]] && echo "$@" | logger -t "$0[$$]"
}

function logpipe() {
    [[ $DEBUG = "yes" ]] && echo "$@" | logger -t "$0[$$]"
}

function trapINT() {
    log "trapINT()"
    [ "x$trp" = "x" ] &&  trp="yes" || return
    sleep 30 && { [[ ! $DEBUG = "yes" ]] && rm -rf "$tmp_dir"; log "Cleanup complete"; } &
    exit
}

function stop() {
    log "Stop stop page";
    echo "stop" > "$tmp_dir"/999999999-page.pbm
}

function flush_pjl_header() {
    cat <<EOF
%-12345X@PJL$e
@PJL SET TIMESTAMP=$print_date$e
@PJL SET FILENAME=$file_name$e
@PJL SET COMPRESS=JBIG$e
@PJL SET USERNAME=$user$e
@PJL SET COVER=OFF$e
@PJL SET HOLD=OFF$e
EOF
}

function flush_pjl_footer() {
    cat <<EOF
@PJL EOJ$e
%-12345X
EOF
}

function flush_page_header() {
    cat <<EOF
@PJL SET PAGESTATUS=START$e
@PJL SET COPIES=$copies_number$e
@PJL SET MEDIASOURCE=$mediasource$e
@PJL SET MEDIATYPE=PLAINRECYCLE$e
@PJL SET PAPER=$pagesize$e
@PJL SET PAPERWIDTH=$xs$e
@PJL SET PAPERLENGTH=$ys$e
@PJL SET RESOLUTION=${resolution%x600}$e
@PJL SET IMAGELEN=$jsize$e
EOF
}

function flush_page_footer() {
    cat <<EOF
@PJL SET DOTCOUNT=1132782$e
@PJL SET PAGESTATUS=END$e
EOF
}

log "Called with cmdline: $0 $*"

trap "stop; trapINT" SIGINT SIGTERM SIGQUIT
#trap 'echo No' SIGINT SIGTERM SIGQUIT EXIT

# Command line parameters
job_id=$1           # Job ID
user=$2             # User started the job
file_name=$3        # File to print
copies_number=$4    # Number of copies to print
options=$5          # Job parameters

pagesize="A4"
resolution="600"
mediasource="TRAY1"
for opt in $options; do
    case "$opt" in
        PageSize=*)
            pagesize=$(echo "${opt#PageSize=}" | tr '[:lower:]' '[:upper:]')
            ;;
        Resolution=*)
            resolution=${opt#Resolution=}
            resolution=${resolution%dpi}
            ;;
        InputSlot=*)
            mediasource=${opt#InputSlot=}
            ;;
    esac
done

# MS-style EOL
e=$(printf \\r\\n)

# Printing date
print_date=$(LC_ALL=en_US.UTF-8 date '+%Y/%m/%d %H:%M:%S')

# Temporary directory
tmp_dir="/tmp/pstoricohddst-gdi-$job_id"
mkdir -p "$tmp_dir"

[ "${DEBUG}" = "yes" ] && exec > "$tmp_dir"/output.stream #> >(tee $tmp_dir/output.stream)

[ -x "$(which inotifywait)" ] && {
	log "Asynchronous variant"

	(
	stage="empty"
	inotifywait -q -m -r -e close_write --format '%f' "$tmp_dir" | grep --line-buffered 'page.pbm$' | while read -r page ; do
	    log "Page submitted"
	    [ "$stage" = "empty" ] && {
		log "1st stage. Flushing PJL header"
                flush_pjl_header
		stage="printing"
	    }
	    [ "$page" = "999999999-page.pbm" ] && {
		log "Last stage. Flushing PJL footer"
                flush_pjl_footer

                pid=$(ps ax | grep "$tmp_dir" | grep -v grep | awk ' { print $1 } ')
		[ ! "x$pid" = "x" ] && kill "$pid"
		break
	    }
	    [ "$stage" = "printing" ] && {
		# Converting page to JBIG format (parameters are very special for this printer!)
		pbmtojbg -p 72 -o 3 -m 0 -q < "$tmp_dir"/"$page" > "$tmp_dir"/raster.jbig

		# Taking image size
                jsize=$(wc -c < "$tmp_dir"/raster.jbig)

		# Taking image dimensions
		read -r fn ft xs ys garb < <(identify "$tmp_dir"/"$page" | tr "x" " ")

		# Flushing page header
                flush_page_header
		log "Flushing image $page"
		cat "$tmp_dir"/raster.jbig

		# Flushing page footer
		# TODO: pixelcount for toner estimate
                flush_page_footer
	    }
	done
	) &

	# Converting from PostScript to PostScript-monochrome, then to PBM image format (per page)
	gs -sDEVICE=ps2write -sOutputFile=- -r"$resolution" -dQUIET -dBATCH -dNOPAUSE -dNOSAFER - | gs -sDEVICE=pbmraw -sOutputFile="${tmp_dir}"/%03d-page.pbm -r"$resolution" -dQUIET -dBATCH -dNOPAUSE -dNOSAFER -

	stop
	wait

	trapINT
} || {
	log "Synchronous variant"

	# Converting from PostScript to PostScript-monochrome, then to PBM image format (per page)
	log "Converting document to pages"
	gs -sDEVICE=ps2write -sOutputFile=- -r"$resolution" -dQUIET -dBATCH -dNOPAUSE -dNOSAFER - | gs -sDEVICE=pbmraw -sOutputFile="${tmp_dir}"/%03d-page.pbm -r"$resolution" -dQUIET -dBATCH -dNOPAUSE -dNOSAFER -
	log "Conversion complete"

        # Flushing PJL header
        flush_pjl_header

	for page in ${tmp_dir}/*-page.pbm; do

		log "Page $page"
		# Converting page to JBIG format (parameters are very special for this printer!)
		pbmtojbg -p 72 -o 3 -m 0 -q < "$page" > "$tmp_dir"/raster.jbig

		# Taking image size
                jsize=$(wc -c < "$tmp_dir"/raster.jbig)

		# Taking image dimensions
		read -r fn ft xs ys garb < <(identify "$page" | tr "x" " ")
		log "Identified as ${xs}x${ys}"

		# Flushing page header
                flush_page_header

		# Flushing image
		cat "$tmp_dir"/raster.jbig

		# Flushing page footer
		# TODO: pixelcount for toner estimate
                flush_page_footer
	done

	# Flushing PJL footer
        flush_pjl_footer
}

[[ ! $DEBUG == "yes" ]] && rm -rf "$tmp_dir";

exit 0
